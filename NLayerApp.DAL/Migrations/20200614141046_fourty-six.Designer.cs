// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayerApp.DAL.EF;

namespace NLayerApp.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200614141046_fourty-six")]
    partial class fourtysix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NLayerApp.DAL.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "phone1.jpg",
                            Path = "/images/phone1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "phone1_1.jpg",
                            Path = "/images/phone1_1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "phone1_2.jpg",
                            Path = "/images/phone1_2.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "phone1_3.jpg",
                            Path = "/images/phone1_3.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "phone1_4.jpg",
                            Path = "/images/phone1_4.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "phone1_5.jpg",
                            Path = "/images/phone1_5.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "phone2.jpg",
                            Path = "/images/phone2.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "phone2_1.jpg",
                            Path = "/images/phone2_1.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "phone2_2.jpg",
                            Path = "/images/phone2_2.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 10,
                            Name = "phone2_3.jpg",
                            Path = "/images/phone2_3.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "phone2_4.jpg",
                            Path = "/images/phone2_4.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "phone3.jpg",
                            Path = "/images/phone3.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 13,
                            Name = "phone3_1.jpg",
                            Path = "/images/phone3_1.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 14,
                            Name = "phone3_2.jpg",
                            Path = "/images/phone3_2.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 15,
                            Name = "phone3_3.jpg",
                            Path = "/images/phone3_3.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 16,
                            Name = "phone3_4.jpg",
                            Path = "/images/phone3_4.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 17,
                            Name = "tv1_1.jpg",
                            Path = "/images/tv1_1.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 18,
                            Name = "tv1_2.jpg",
                            Path = "/images/tv1_2.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 19,
                            Name = "tv1_3.jpg",
                            Path = "/images/tv1_3.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 20,
                            Name = "tv1_4.jpg",
                            Path = "/images/tv1_4.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 21,
                            Name = "tv1_5.jpg",
                            Path = "/images/tv1_5.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 22,
                            Name = "tv1_6.jpg",
                            Path = "/images/tv1_6.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 23,
                            Name = "tv2_1.jpg",
                            Path = "/images/tv2_1.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 24,
                            Name = "tv2_2.jpg",
                            Path = "/images/tv2_2.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 25,
                            Name = "tv2_3.jpg",
                            Path = "/images/tv2_3.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 26,
                            Name = "tv2_4.jpg",
                            Path = "/images/tv2_4.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 27,
                            Name = "tv2_5.jpg",
                            Path = "/images/tv2_5.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 28,
                            Name = "tv2_6.jpg",
                            Path = "/images/tv2_6.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 29,
                            Name = "tv3_1.jpg",
                            Path = "/images/tv3_1.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 30,
                            Name = "tv3_2.jpg",
                            Path = "/images/tv3_2.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 31,
                            Name = "tv3_3.jpg",
                            Path = "/images/tv3_3.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 32,
                            Name = "tv3_4.jpg",
                            Path = "/images/tv3_4.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 33,
                            Name = "tv3_5.jpg",
                            Path = "/images/tv3_5.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 34,
                            Name = "laptop1_1.jpg",
                            Path = "/images/laptop1_1.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 35,
                            Name = "laptop1_2.jpg",
                            Path = "/images/laptop1_2.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 36,
                            Name = "laptop1_3.jpg",
                            Path = "/images/laptop1_3.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 37,
                            Name = "laptop1_4.jpg",
                            Path = "/images/laptop1_4.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 38,
                            Name = "laptop2_1.jpg",
                            Path = "/images/laptop2_1.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 39,
                            Name = "laptop2_2.jpg",
                            Path = "/images/laptop2_2.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 40,
                            Name = "laptop2_3.jpg",
                            Path = "/images/laptop2_3.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 41,
                            Name = "laptop2_4.jpg",
                            Path = "/images/laptop2_4.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 42,
                            Name = "laptop3_1.jpg",
                            Path = "/images/laptop3_1.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 43,
                            Name = "laptop3_2.jpg",
                            Path = "/images/laptop3_2.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 44,
                            Name = "laptop3_3.jpg",
                            Path = "/images/laptop3_3.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 45,
                            Name = "laptop3_4.jpg",
                            Path = "/images/laptop3_4.jpg",
                            ProductId = 9
                        });
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.OrderCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OrderCustomers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ул.Иванова 9",
                            Name = "Иван",
                            Patronymic = "Иванович",
                            ProdId = 1,
                            Surname = "Иванов",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "ул.Васильева 28",
                            Name = "Василий",
                            Patronymic = "Васильевич",
                            ProdId = 1,
                            Surname = "Васильев",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "ул.Петрова 55",
                            Name = "Петр",
                            Patronymic = "Петрович",
                            ProdId = 1,
                            Surname = "Петров",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "ул.Евгенова 5",
                            Name = "Евгений",
                            Patronymic = "Евгеньевич",
                            ProdId = 2,
                            Surname = "Евгенов",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "ул.Юрьева 30",
                            Name = "Юрий",
                            Patronymic = "Юрьевич",
                            ProdId = 3,
                            Surname = "Юрьев",
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Address = "ул.Григорьева 12",
                            Name = "Григорий",
                            Patronymic = "Григорьевич",
                            ProdId = 3,
                            Surname = "Григорьев",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.OrderSeller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OrderSellers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Samsung Galaxy A31 – смартфон среднего ценового сегмента, сочетающий в себе хороший уровень оснащения, емкий аккумулятор и строгий обновленный дизайн. Элегантные цвета корпуса дополнены стильным узором, что прибавляет баллы внешнему виду устройства. В Samsung Galaxy A31 устанавливается 6,4-дюймовый sAMOLED дисплей с разрешением 2400х1080 точек и плотностью пикселей 411 ppi. Достаточную для комфортного повседневного использования производительность обеспечивает 8-ядерный процессор. Основная камера состоит из 4 модулей на 48, 8 и пары по 5 МП. Фронтальная камера установлена в небольшом каплевидном вырезе в экране и оснащается 20 МП модулем. Особенностью Samsung Galaxy A31 является также встроенный в дисплей сканер отпечатков пальцев, а также наличие NFC.",
                            Header = "Мобильный телефон Samsung Galaxy A31 4/128GB Prism Crush White (SM-A315FZWVSEK)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "iPhone 11 нельзя назвать абсолютно новым смартфоном, это прямой потомок iPhone XR. Смартфон изменился внешне очень минимально, габариты с предшественником совпадают полностью. Главным внешним новшеством являются обновленные цветовые решения, но это по-прежнему самый яркий iPhone. Еще одним изменением стало появление второго модуля камеры, теперь к широкоугольному добавился ультраширокоугольный объектив. Это позволит создавать групповые портреты и красивые панорамы. В качестве процессора теперь используется более быстрый и энергоэффективный Apple 13 Bionic. Что касается времени автономной работы, то и здесь компания сделала шаг вперед и смартфон должен работать как минимум на час дольше модели XR.",
                            Header = "Мобильный телефон Apple iPhone 11 128GB PRODUCT Red Официальная гарантия",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Samsung Galaxy M21 – обновленная версия одного из самых сбалансированных решений компании в среднем сегменте. Устройство объединяет в себе элегантный лаконичный дизайн, безрамочное исполнение и хороший уровень оснащения. 6,4-дюймовый Super AMOLED дисплей Samsung Galaxy M21 имеет разрешение 2340х1080 точек. Фронтальная камера на 20- МП установлена в небольшом каплевидном вырезе. Она поддерживает технологию распознавания по лицу. Комфортный для любых задач уровень производительности обеспечивает 8-ядерный процессор Samsung Exynos 7. Основная камера смартфона состоит из трех модулей на 48, 8 и 5 МП. Она способна вести запись видео в разрешении 3840х2160 точек и с высокой частотой до 240 к/с. Важной особенностью Samsung Galaxy M21 является наличие NFC, а также поддержки быстрой зарядки.",
                            Header = "Смартфон Samsung Galaxy M21 4/64GB Green (SM-M215FZGU)",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Samsung UE24H4070 ‒ компактный телевизор с диагональю 24 дюйма и разрешением 1366x768 точек. Среди оснащения можно обнаружить тюнеры цифрового и аналогового телевидения и наличие USB интерфейса для просмотра фильмов, изображений и прослушивания музыки. Для экономии места устройство может быть закреплено на стену с помощью кронштейна, за что отвечает поддержка стандарта VESA и наличие разъемов для крепления 75x75 мм. Подключать проигрыватели, игровые приставки, ресиверы и другие устройства предоставляется возможным благодаря наличию разъемов HDMI (2 порта), компонентному, композитному и компьютерному VGA. За звук в Samsung UE24H4070 отвечает акустическая система 2.0 общей мощностью в 20 Вт с поддержкой Dolby Digital Plus, а для тех, кто любит смотреть телевизор в наушниках иммется разъем для их подключения.",
                            Header = "Телевизор Samsung UE24H4070AUXUA",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Xiaomi Mi TV 4S 43' – бюджетный «умный» 4К - телевизор под управлением операционной системы Google Android TV, адресованный искушенным современным пользователям Smart TV.Основной концептуальный упор делает на крайне демократичную стоимость, по сравнению с сопоставимыми решениями. 10 - килограммовая конструкция наделена простым и аккуратным дизайном, а в качестве штатной акустики задействованы 10 - ваттные стереодинамики с поддержкой технологии объемного звучания Dolby Audio.Дисплеем служит 43 - дюймовый LCD - экран с LED - подсветкой, разрешением 3840x2160 пикселей и заявленной поддержкой HDR.",
                            Header = "Телевизор Xiaomi Mi LED TV 4S 43' UHD 4K(L43M5 - 5ARU)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "Panasonic TX-32FSR500 – бюджетный «умный» телевизор, ориентированный на базовое мультимедийное применение в содействии с современной пользовательской электроникой. К достоинствам телевизора стоит отнести функциональный встроенный тюнер с поддержкой цифровых стандартов эфирного вещания DVB-C, DVB-T2, DVB-S2, а также бортовую акустику в составе двух 10-ваттных динамиков с поддержкой технологии объемного звучания Cinema Suround. 32-дюймовый LCD-экран с LED-подсветкой обладает разрешением 1366x768 пикселей.",
                            Header = "Телевизор Panasonic TX-32FSR500",
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Lenovo S145 — это 15.6-дюймовый высокопроизводительный ноутбук, который отлично подойдет для работы и развлечений. Ноутбук оснащен производительным процессором, высокоскоростным модулем Wi-Fi и акустической системой высокого качества. Динамический звук. Приготовьтесь окунуться в мир мультимедийных развлечений.Благодаря качественной аудиосистеме S145 обеспечивает громкое звучание музыки и фильмов. Высокая скорость передачи данных. Ноутбук оборудован разъемом USB 3.1, что позволяет обмениваться данными с другими устройствами со скоростью, которая в 10 раз превышает скорость интерфейсов USB более ранних версий. Интернет на сверхвысоких скоростях. Ноутбук S145 оснащен встроенным модулем Wi - Fi 802.11 ac, который обеспечивает молниеносную скорость для веб - серфинга, воспроизведения потокового видео и загрузки файлов.Скорость передачи данных стандарта Wi - Fi 802.11 ac почти в три раза выше, чем 802.11 b / g / n. Внимание к деталям S145 обладает простым, но в то же время элегантным дизайном.Несмотря на свою компактность, ноутбук может похвастать богатой функциональностью и поддержкой современных интерфейсов, включая USB 3.1, HDMI и SD.",
                            Header = "Ноутбук Lenovo IdeaPad S145-15IGM (81MX002RRA) Granite Black",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Description = "HP Pavilion Gaming 15 — среднеформатный игровой ноутбук, ориентированный на пользователей, которым нужно мощное и портативное решение. Модель выполнена в обновленном дизайне, соответствующем новой линейке и отличается строгостью и элегантностью. HP Pavilion Gaming 15 оснащается высокопроизводительным процессором Intel Core i7, работающим в паре с дискретным видеоадаптером NVIDIA GeForce GTX950M. В такой конфигурации ноутбук способен справляться с любыми задачами, которые поставит перед ним пользователь. В HP Pavilion Gaming 15 используется качественная IPS матрица, которая обеспечивает отличное качество картинки. Приятным бонусом станет наличие подсветки клавиатуры, что делает возможным игру и работу в темное время суток.",
                            Header = "Ноутбук HP Pavilion Gaming 15-ec0003ua (9RH21EA) Dark Grey Суперцена!!!",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            Description = "ASUS Laptop X571 – это современный ноутбук для ежедневного использования как дома, так и в офисе. Его мощная аппаратная конфигурация, в которую входит процессор Intel, видеокарта NVIDIA GeForce 1650 и до 16 гигабайт оперативной памяти, обеспечит высокую скорость работы любых приложений. В качестве операционной системы на него может устанавливаться Windows 10 Pro. Ноутбук ASUS Laptop X571 обладает современной конфигурацией, которая прекрасно подходит для повседневных дел и развлечений, например для обработки видео или запуска легких игр. В максимальной версии она включает в себя процессор Intel Core i7 девятого поколения, оперативную память объемом 16 ГБ и дискретную видеокарту NVIDIA GeForce GTX 1650.",
                            Header = "Ноутбук Asus Gaming X571GT-BN436 (90NB0NL1-M07160) Star Black Суперцена!!!",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderSellerId")
                        .HasColumnType("int");

                    b.Property<int>("PriceEnd")
                        .HasColumnType("int");

                    b.Property<int>("PriceNow")
                        .HasColumnType("int");

                    b.Property<int>("PriceStart")
                        .HasColumnType("int");

                    b.Property<int>("QtyEnd")
                        .HasColumnType("int");

                    b.Property<int>("QtyStart")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderSellerId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "email1@gmail.com",
                            Password = "Password1!",
                            Role = "User"
                        },
                        new
                        {
                            Id = 2,
                            Email = "email2@gmail.com",
                            Password = "Password2!",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            Email = "email3@gmail.com",
                            Password = "Password3!",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.Laptop", b =>
                {
                    b.HasBaseType("NLayerApp.DAL.Entities.Product");

                    b.Property<string>("CPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Screen")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Laptop");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Category = "Laptop",
                            Manufacturer = "Lenovo",
                            Name = "Ноутбук Lenovo IdeaPad S145-15IGM (81MX002RRA) Granite Black",
                            OrderSellerId = 7,
                            PriceEnd = 4500,
                            PriceNow = 4800,
                            PriceStart = 5000,
                            QtyEnd = 6,
                            QtyStart = 10,
                            CPU = "Двухъядерный Intel Celeron N4000(1.1 - 2.6 ГГц)",
                            Memory = "500 ГБ",
                            RAM = "4 ГБ",
                            Screen = 16,
                            Weight = "1.85 кг"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Laptop",
                            Manufacturer = "HP",
                            Name = "Ноутбук HP Pavilion Gaming 15-ec0003ua (9RH21EA) Dark Grey Суперцена!!!",
                            OrderSellerId = 8,
                            PriceEnd = 23000,
                            PriceNow = 23800,
                            PriceStart = 24000,
                            QtyEnd = 4,
                            QtyStart = 5,
                            CPU = "Четырехъядерный AMD Ryzen 5 3550H (2.1 - 3.7 ГГц)",
                            Memory = "500 ГБ",
                            RAM = "16 ГБ",
                            Screen = 16,
                            Weight = "2.25 кг"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Laptop",
                            Manufacturer = "ASUS",
                            Name = "Ноутбук Asus Gaming X571GT-BN436 (90NB0NL1-M07160) Star Black Суперцена!!!",
                            OrderSellerId = 9,
                            PriceEnd = 19000,
                            PriceNow = 20200,
                            PriceStart = 21000,
                            QtyEnd = 6,
                            QtyStart = 10,
                            CPU = "Четырехъядерный Intel Core i5-8300H (2.3 - 4.0 ГГц)",
                            Memory = "256 ГБ",
                            RAM = "8 ГБ",
                            Screen = 15,
                            Weight = "2.14 кг"
                        });
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.Phone", b =>
                {
                    b.HasBaseType("NLayerApp.DAL.Entities.Product");

                    b.Property<string>("CPU")
                        .HasColumnName("Phone_CPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Camera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Charge")
                        .HasColumnType("int");

                    b.Property<int>("Memory")
                        .HasColumnName("Phone_Memory")
                        .HasColumnType("int");

                    b.Property<string>("OperationSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtySimCard")
                        .HasColumnType("int");

                    b.Property<int>("RAM")
                        .HasColumnName("Phone_RAM")
                        .HasColumnType("int");

                    b.Property<double>("Screen")
                        .HasColumnName("Phone_Screen")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Phone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Phone",
                            Manufacturer = "Samsung",
                            Name = "Мобильный телефон Samsung Galaxy A31 4/128GB Prism Crush White (SM-A315FZWVSEK)",
                            OrderSellerId = 1,
                            PriceEnd = 6000,
                            PriceNow = 6350,
                            PriceStart = 6700,
                            QtyEnd = 5,
                            QtyStart = 10,
                            CPU = "MediaTek MT6768 2.0 ГГц + 1.7 ГГц",
                            Camera = "12",
                            Charge = 5000,
                            Memory = 128,
                            OperationSystem = "Android",
                            QtySimCard = 2,
                            RAM = 4,
                            Screen = 6.0
                        },
                        new
                        {
                            Id = 2,
                            Category = "Phone",
                            Manufacturer = "Apple",
                            Name = "Мобильный телефон Apple iPhone 11 128GB PRODUCT Red Официальная гарантия",
                            OrderSellerId = 2,
                            PriceEnd = 23000,
                            PriceNow = 24200,
                            PriceStart = 26000,
                            QtyEnd = 2,
                            QtyStart = 5,
                            CPU = "Apple A13 Bionic",
                            Camera = "20",
                            Charge = 3046,
                            Memory = 128,
                            OperationSystem = "IOS",
                            QtySimCard = 1,
                            RAM = 4,
                            Screen = 8.0
                        },
                        new
                        {
                            Id = 3,
                            Category = "Phone",
                            Manufacturer = "Samsung",
                            Name = "Мобильный телефон Samsung Galaxy M21 4/64GB Green (SM-M215FZGUSEK)",
                            OrderSellerId = 3,
                            PriceEnd = 6000,
                            PriceNow = 6090,
                            PriceStart = 6300,
                            QtyEnd = 3,
                            QtyStart = 10,
                            CPU = "Samsung Exynos 9611 2.3 ГГц + 1.7 ГГц",
                            Camera = "20",
                            Charge = 6000,
                            Memory = 62,
                            OperationSystem = "Android",
                            QtySimCard = 2,
                            RAM = 4,
                            Screen = 6.5
                        });
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.TV", b =>
                {
                    b.HasBaseType("NLayerApp.DAL.Entities.Product");

                    b.Property<string>("DimensionsWithStand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Screen")
                        .HasColumnName("TV_Screen")
                        .HasColumnType("int");

                    b.Property<string>("SmartPlatform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TunerRanges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightWithStand")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("TV");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Category = "TV",
                            Manufacturer = "Samsung",
                            Name = "Телевизор Samsung UE24H4070AUXUA",
                            OrderSellerId = 4,
                            PriceEnd = 3000,
                            PriceNow = 3150,
                            PriceStart = 3300,
                            QtyEnd = 5,
                            QtyStart = 10,
                            DimensionsWithStand = "561.8 x 384.2 x 163.8 мм",
                            Resolution = "1366x768",
                            Screen = 24,
                            SmartPlatform = "Нет",
                            TunerRanges = "DVB-C DVB-S2 DVB-T2",
                            WeightWithStand = "4.1 кг"
                        },
                        new
                        {
                            Id = 5,
                            Category = "TV",
                            Manufacturer = "Xiaomi",
                            Name = "Телевизор Xiaomi Mi LED TV 4S 43' UHD 4K(L43M5 - 5ARU)",
                            OrderSellerId = 5,
                            PriceEnd = 7500,
                            PriceNow = 7850,
                            PriceStart = 8000,
                            QtyEnd = 7,
                            QtyStart = 10,
                            DimensionsWithStand = "963.3 x 214.6 x 613 мм",
                            Resolution = "3840x2160",
                            Screen = 43,
                            SmartPlatform = "Android",
                            TunerRanges = "DVB-C DVB-T2",
                            WeightWithStand = "7.26 кг"
                        },
                        new
                        {
                            Id = 6,
                            Category = "TV",
                            Manufacturer = "Panasonic",
                            Name = "Телевизор Panasonic TX-32FSR500",
                            OrderSellerId = 6,
                            PriceEnd = 5500,
                            PriceNow = 5700,
                            PriceStart = 6000,
                            QtyEnd = 4,
                            QtyStart = 10,
                            DimensionsWithStand = "733 x 481 x 198 мм",
                            Resolution = "1366x768",
                            Screen = 32,
                            SmartPlatform = "My Home Screen 3.0",
                            TunerRanges = "DVB-C DVB-S2 DVB-T DVB-T2",
                            WeightWithStand = "6 кг"
                        });
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.Image", b =>
                {
                    b.HasOne("NLayerApp.DAL.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.OrderCustomer", b =>
                {
                    b.HasOne("NLayerApp.DAL.Entities.User", "User")
                        .WithMany("OrderCustomers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.OrderSeller", b =>
                {
                    b.HasOne("NLayerApp.DAL.Entities.User", "User")
                        .WithMany("OrderSellers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NLayerApp.DAL.Entities.Product", b =>
                {
                    b.HasOne("NLayerApp.DAL.Entities.OrderSeller", "OrderSeller")
                        .WithOne("Product")
                        .HasForeignKey("NLayerApp.DAL.Entities.Product", "OrderSellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
